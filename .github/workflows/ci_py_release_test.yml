name: PyPI Test Release

on: [push, pull_request]

jobs:
  build_sdist:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "pip"

      - name: Build source distribution
        run: |
            pip3 install build twine
            python3 -m build --sdist

      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: simplepyble
          path: dist/*.tar.gz

      - name: Check packages
        run: twine check dist/*.tar.gz

      - name: Publish packages
        if: ${{ env.HAS_TWINE_USERNAME == 'true' }}
        run: |
          twine upload --repository testpypi --skip-existing dist/*.tar.gz --verbose
        env:
          HAS_TWINE_USERNAME: ${{ secrets.TEST_PYPI_USER != '' }}
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}

  build_wheels:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04 , windows-2022, macos-12]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "pip"

      - name: Install dependencies
        run: pip install -r simplepyble/requirements.txt

      - name: Build wheel
        uses: pypa/cibuildwheel@v2.11.3
        env:
          CIBW_BUILD: cp39-* # Only build for Python 3.9
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BEFORE_ALL_LINUX: "yum update -y && yum group install -y \"Development Tools\" && yum install -y dbus-devel"
          CIBW_ARCHS_LINUX: x86_64 i686 aarch64
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          CIBW_ARCHS_WINDOWS: AMD64 x86
          CIBW_SKIP: "*musllinux_* pp*"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: simpleble-wheels
          path: wheelhouse/*.whl

      - name: Check Packages
        run: twine check wheelhouse/*.whl

      - name: Publish packages
        if: ${{ env.HAS_TWINE_USERNAME == 'true' }}
        run: |
          twine upload --repository testpypi --skip-existing wheelhouse/*.whl --verbose
        env:
          HAS_TWINE_USERNAME: ${{ secrets.TEST_PYPI_USER != '' }}
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}


  py-release-crossbuild:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]
        options: [
          {container: dockcross/linux-armv6-lts, target: linux-armv6},
        ]

    container:
      image: ${{ matrix.options.container }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install Python dependencies
        run: pip install -r simplepyble/requirements.txt

      - name: Build Expat
        run: |
          git clone https://github.com/libexpat/libexpat.git /tmp/libexpat
          cd /tmp/libexpat/expat

          cmake -B /tmb/expat/build -S /tmp/libexpat/expat -DEXPAT_BUILD_DOCS=OFF -DEXPAT_BUILD_EXAMPLES=OFF -DEXPAT_BUILD_TESTS=OFF
          cmake --build /tmb/expat/build --config Release --parallel 4
          cmake --install /tmb/expat/build --prefix /tmp/expat/install

      - name: Build DBus
        run: |
          git clone https://gitlab.freedesktop.org/dbus/dbus.git /tmp/dbus

          export CMAKE_PREFIX_PATH=/tmp/expat/install:$CMAKE_PREFIX_PATH

          cmake -B /tmb/dbus/build -S /tmp/dbus -DDBUS_SESSION_SOCKET_DIR=/usr/local/var/run/dbus/system_bus_socket -DDBUS_BUILD_TESTS=OFF
          cmake --build /tmb/dbus/build --config Release --parallel 4
          cmake --install /tmb/dbus/build --prefix /tmp/dbus/install

      - name: Build SimpleBLE
        run: |
          GITHUB_WORKSPACE=$(pwd)
          mkdir -p $GITHUB_WORKSPACE/artifacts_pre
          mkdir -p $GITHUB_WORKSPACE/artifacts

          export CMAKE_PREFIX_PATH=/tmp/dbus/install:$CMAKE_PREFIX_PATH
          python3 -m build --wheel --outdir $GITHUB_WORKSPACE/artifacts_pre $GITHUB_WORKSPACE/simplepyble

          auditwheel repair -w $GITHUB_WORKSPACE/artifacts $GITHUB_WORKSPACE/artifacts_pre/*.whl

          ls -al $GITHUB_WORKSPACE/artifacts_pre
          ls -al $GITHUB_WORKSPACE/artifacts

      - name: Upload binaries to job
        uses: actions/upload-artifact@v3
        with:
          name: simplepyble_${{ matrix.python-version }}_${{ matrix.options.target }}
          path: artifacts/*.whl